<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="http://schemas.bytecode77.com/2023/xaml/presentation"
	xmlns:ctrl="clr-namespace:BytecodeApi.Wpf.Cui.Controls">
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontWeight" Value="Normal" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Grid.IsSharedSizeScope" Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Border Name="Border" BorderThickness="1" Background="{TemplateBinding Background}">
								<Grid>
									<ContentPresenter Name="Content" ContentSource="Header" Margin="9,-1,9,1" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" />
									<Popup Placement="Bottom" HorizontalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
										<Border Margin="0,0,10,10" SnapsToDevicePixels="True" BorderThickness="1,0,1,1" BorderBrush="#94a6ca" Background="#e9eeff">
											<Border.Effect>
												<DropShadowEffect BlurRadius="4" ShadowDepth="4" Opacity=".4" />
											</Border.Effect>
											<Grid>
												<Grid.RowDefinitions>
													<RowDefinition Height="1" />
													<RowDefinition Height="*" />
												</Grid.RowDefinitions>
												<Border Background="#94a6ca" />
												<Border Width="{Binding ActualWidth, ElementName=WidthMeasureElement}" HorizontalAlignment="Left" Background="#e9eeff" />
												<StackPanel Grid.Row="1" Margin="2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
												<Grid Width="{Binding ActualWidth, ElementName=Border}">
													<FrameworkElement Name="WidthMeasureElement" Margin="2,0,0,0" />
												</Grid>
											</Grid>
										</Border>
									</Popup>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter TargetName="Border" Property="BorderBrush" Value="#5d6b99" />
									<Setter TargetName="Border" Property="Background" Value="#ecf4ff" />
								</Trigger>
								<Trigger Property="IsSubmenuOpen" Value="True">
									<Setter TargetName="Border" Property="BorderBrush" Value="#94a6ca" />
									<Setter TargetName="Border" Property="Background" Value="#e9eeff" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<ContentPresenter Name="Content" ContentSource="Header" Margin="9,0,9,0" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
										<ColumnDefinition Width="16" />
									</Grid.ColumnDefinitions>
									<Grid Width="16" Height="16" Margin="2,2,12,2">
										<ContentPresenter Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" />
									</Grid>
									<ContentPresenter Name="Content" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" />
									<TextBlock Name="InputGesture" Grid.Column="2" DockPanel.Dock="Right" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Margin="40,0,0,0" />
									<Path Name="Arrow" Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="Black" Data="M 0 0 L 0 7 L 4 3.5 Z" />
									<Popup Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False">
										<Border Margin="0,0,10,10" SnapsToDevicePixels="True" BorderThickness="1" BorderBrush="#94a6ca" Background="#e9eeff">
											<Border.Effect>
												<DropShadowEffect BlurRadius="4" ShadowDepth="4" Opacity=".4" />
											</Border.Effect>
											<Grid>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="27" />
													<ColumnDefinition Width="*" />
												</Grid.ColumnDefinitions>
												<StackPanel Grid.Column="1" Margin="-25,2,2,2" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
											</Grid>
										</Border>
									</Popup>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="Icon" Value="{x:Null}">
									<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
									<Setter TargetName="Border" Property="Background" Value="#b1c5ff" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
									<Setter TargetName="InputGesture" Property="Foreground" Value="#757575" />
									<Setter TargetName="Arrow" Property="Fill" Value="#909090" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="BorderThickness" Value="1" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type MenuItem}">
							<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
										<ColumnDefinition Width="16" />
									</Grid.ColumnDefinitions>
									<Grid Width="16" Height="16" Margin="2,2,12,2">
										<ContentPresenter Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" VerticalAlignment="Center" />
									</Grid>
									<Border Name="Check" Width="18" Height="18" Margin="2,0,12,0" Background="#d9e0f8" Visibility="Hidden">
										<Path Name="CheckMark" Width="10" Height="10" SnapsToDevicePixels="False" StrokeThickness="1.5" Stroke="Black" Data="M 8 2 L 4 11 L 2 6" />
									</Border>
									<ContentPresenter Name="Content" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" />
									<TextBlock Name="InputGesture" Grid.Column="2" DockPanel.Dock="Right" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Margin="40,0,0,0" />
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="Icon" Value="{x:Null}">
									<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger Property="IsChecked" Value="True">
									<Setter TargetName="Check" Property="Visibility" Value="Visible" />
								</Trigger>
								<Trigger Property="IsCheckable" Value="True">
									<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
								</Trigger>
								<Trigger Property="IsHighlighted" Value="True">
									<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
									<Setter TargetName="Border" Property="Background" Value="#b1c5ff" />
									<Setter TargetName="Check" Property="Background" Value="White" />
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
									<Setter TargetName="InputGesture" Property="Foreground" Value="#757575" />
									<Setter TargetName="CheckMark" Property="Stroke" Value="#909090" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="Panel.Margin" Value="-2,2,1,2" />
		<Setter Property="Panel.Background" Value="#c0cae9" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
	</Style>
</ResourceDictionary>