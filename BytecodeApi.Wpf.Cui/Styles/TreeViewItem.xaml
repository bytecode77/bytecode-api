<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="http://schemas.bytecode77.com/2023/xaml/presentation"
	xmlns:ctrl="clr-namespace:BytecodeApi.Wpf.Cui.Controls"
	xmlns:converter="clr-namespace:BytecodeApi.Wpf.Cui.Converters">
	<Style TargetType="{x:Type TreeViewItem}">
		<Setter Property="Padding" Value="3,1" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<StackPanel>
						<Border Name="Border" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<DockPanel Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={converter:TreeViewItemIndentConverter}}">
								<ToggleButton Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" Width="16" Height="16" Margin="0,0,4,0" Focusable="False">
									<ToggleButton.Template>
										<ControlTemplate TargetType="{x:Type ToggleButton}">
											<Border Background="Transparent" Width="16" Height="16">
												<Path Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="Black" Data="M 5.5 2.5 L 9.5 6.5 L 5.5 10.5 Z" SnapsToDevicePixels="True" />
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsChecked" Value="True">
													<Setter TargetName="Arrow" Property="Data" Value="M 5.5 10.5 L 10.5 5.5 L 10.5 10.5 Z" />
													<Setter TargetName="Arrow" Property="Fill" Value="Black" />
												</Trigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition Property="IsMouseOver" Value="True" />
														<Condition Property="Tag" Value="{x:Null}" />
													</MultiTrigger.Conditions>
													<Setter TargetName="Arrow" Property="Stroke" Value="#006bbe" />
												</MultiTrigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition Property="IsChecked" Value="True" />
														<Condition Property="IsMouseOver" Value="True" />
														<Condition Property="Tag" Value="{x:Null}" />
													</MultiTrigger.Conditions>
													<Setter TargetName="Arrow" Property="Fill" Value="#006bbe" />
												</MultiTrigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition Property="IsMouseOver" Value="True" />
														<Condition Property="Tag" Value="{ui:Boolean True}" />
													</MultiTrigger.Conditions>
													<Setter TargetName="Arrow" Property="Fill" Value="Black" />
												</MultiTrigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition Property="IsChecked" Value="True" />
														<Condition Property="IsMouseOver" Value="True" />
														<Condition Property="Tag" Value="{ui:Boolean True}" />
													</MultiTrigger.Conditions>
													<Setter TargetName="Arrow" Property="Stroke" Value="Black" />
													<Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
												</MultiTrigger>
												<Trigger Property="IsEnabled" Value="False">
													<Setter TargetName="Arrow" Property="Stroke" Value="#757575" />
													<Setter TargetName="Arrow" Property="Fill" Value="Transparent" />
												</Trigger>
												<MultiTrigger>
													<MultiTrigger.Conditions>
														<Condition Property="IsEnabled" Value="False" />
														<Condition Property="IsChecked" Value="True" />
													</MultiTrigger.Conditions>
													<Setter TargetName="Arrow" Property="Fill" Value="#757575" />
												</MultiTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</ToggleButton.Template>
								</ToggleButton>
								<ContentPresenter Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</DockPanel>
						</Border>
						<ItemsPresenter Name="ItemsHost" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="ui:TreeViewItemService.IsMouseDirectlyOverItem" Value="True">
							<Setter TargetName="Border" Property="Background" Value="#f0f0f0" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#f0f0f0" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="Background" Value="#c4d5ff" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
							<Setter TargetName="Expander" Property="Tag" Value="{ui:Boolean True}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="#e6e7ef" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#e6e7ef" />
						</MultiTrigger>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Border" Property="Background" Value="#f9f9f9" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>