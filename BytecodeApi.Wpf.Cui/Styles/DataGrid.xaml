<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="http://schemas.bytecode77.com/2023/xaml/presentation"
	xmlns:ctrl="clr-namespace:BytecodeApi.Wpf.Cui.Controls"
	xmlns:converter="clr-namespace:BytecodeApi.Wpf.Cui.Converters">
	<Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="Padding" Value="4" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="BorderBrush" Value="#cccedb" />
		<Setter Property="Background" Value="#f6f6f6" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid>
						<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<Grid>
								<ContentPresenter Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}" ui:TextBlockService.TextTrimming="CharacterEllipsis" />
								<Path Name="UpArrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-4,0,0" Data="M 0,6 L0,5 L4,1 L8,5 L8,6 L4,2 z" Visibility="Collapsed" />
								<Path Name="DownArrow" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,-4,0,0" Data="M 0,1 L0,2 L4,6 L8,2 L8,1 L4,5 z" Visibility="Collapsed" />
							</Grid>
						</Border>
						<Thumb Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Width="9">
							<Thumb.Template>
								<ControlTemplate TargetType="{x:Type Thumb}">
									<Border Background="Transparent" Cursor="SizeWE" />
								</ControlTemplate>
							</Thumb.Template>
						</Thumb>
						<Thumb Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Width="18" Margin="0,0,-9,0">
							<Thumb.Template>
								<ControlTemplate TargetType="{x:Type Thumb}">
									<Border Background="Transparent" Cursor="SizeWE" />
								</ControlTemplate>
							</Thumb.Template>
						</Thumb>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Background" Value="#006cbe" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="UpArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="DownArrow" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#e9e9e9" />
							<Setter TargetName="UpArrow" Property="Fill" Value="#909090" />
							<Setter TargetName="DownArrow" Property="Fill" Value="#909090" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="HorizontalContentAlignment" Value="Right" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="0,0,1,1" />
		<Setter Property="BorderBrush" Value="#cccedb" />
		<Setter Property="Background" Value="#f6f6f6" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<TextBlock Name="RowNumber" Text="{Binding Converter={converter:DataGridRowNumberConverter}}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Border" Property="BorderBrush" Value="#e9e9e9" />
						</Trigger>
						<DataTrigger Binding="{Binding ShowRowNumbers, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="False">
							<Setter TargetName="RowNumber" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type DataGridRow}">
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="FullRow" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter Property="Background" Value="#f0f0f0" />
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type DataGridCell}">
		<Setter Property="Padding" Value="5,1" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Grid>
						<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ContentPresenter Name="Content" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" />
						</Border>
						<Border Name="FocusRect" BorderThickness="1" BorderBrush="#203d77" Visibility="Collapsed" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="#f0f0f0" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="Black" />
							<Setter TargetName="Border" Property="Background" Value="#c4d5ff" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="Selector.IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background" Value="#e6e7ef" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused" Value="True" />
								<Condition Property="Selector.IsSelectionActive" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="FocusRect" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<Trigger Property="IsEditing" Value="True">
							<Setter TargetName="Border" Property="Background" Value="White" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsEditing" Value="True" />
								<Condition Property="Selector.IsSelectionActive" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="FocusRect" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>