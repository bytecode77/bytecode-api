<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="http://schemas.bytecode77.com/2023/xaml/presentation"
	xmlns:ctrl="clr-namespace:BytecodeApi.Wpf.Cui.Controls">
	<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="#5d6b99" />
							<Setter TargetName="Border" Property="Background" Value="#ecf4ff" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="22" />
		<Setter Property="Height" Value="24" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Name="Border" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter Name="Content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}" SnapsToDevicePixels="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="#5d6b99" />
							<Setter TargetName="Border" Property="Background" Value="#ecf4ff" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="#825d07" />
							<Setter TargetName="Border" Property="Background" Value="#ffedc8" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="BorderBrush" Value="#825d07" />
							<Setter TargetName="Border" Property="Background" Value="White" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
		<Setter Property="Height" Value="21" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="#8591a2" />
		<Setter Property="Background" Value="#fcfcfc" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ScrollViewer Name="PART_ContentHost" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsReadOnly" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocusWithin" Value="True" />
								<Condition Property="IsReadOnly" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
						</MultiTrigger>
						<Trigger Property="IsReadOnly" Value="True">
							<Setter TargetName="Border" Property="Background" Value="#fafafa" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="#757575" />
							<Setter TargetName="Border" Property="Background" Value="#f2f5fc" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ContextMenu">
			<Setter.Value>
				<ContextMenu>
					<MenuItem Command="Undo">
						<MenuItem.Icon>
							<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Undo.svg" Stretch="None" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Redo">
						<MenuItem.Icon>
							<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Redo.svg" Stretch="None" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator />
					<MenuItem Command="Cut">
						<MenuItem.Icon>
							<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Cut.svg" Stretch="None" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Copy">
						<MenuItem.Icon>
							<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Copy.svg" Stretch="None" />
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="Paste">
						<MenuItem.Icon>
							<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Paste.svg" Stretch="None" />
						</MenuItem.Icon>
					</MenuItem>
					<Separator />
					<MenuItem Command="SelectAll" />
				</ContextMenu>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
		<Setter Property="Height" Value="20" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="BorderBrush" Value="#8591a2" />
		<Setter Property="Background" Value="#f2f5fc" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<ToggleButton Name="ToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Focusable="False" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Border Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
													<DockPanel>
														<Border Name="ArrowBorder" DockPanel.Dock="Right" BorderThickness="1,0,0,0" BorderBrush="Transparent">
															<Path Name="Arrow" Data="M 0 0 L 6 0 L 3 3 Z" Margin="3,0" VerticalAlignment="Center" Fill="Black" />
														</Border>
														<Border>
															<ContentPresenter Name="Content" TextElement.Foreground="{TemplateBinding Foreground}" />
														</Border>
													</DockPanel>
												</Border>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="True">
														<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
														<Setter TargetName="Border" Property="Background" Value="#fcfcfc" />
														<Setter TargetName="ArrowBorder" Property="BorderBrush" Value="#203d77" />
													</Trigger>
													<DataTrigger Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True">
														<Setter TargetName="ArrowBorder" Property="BorderBrush" Value="#8591a2" />
													</DataTrigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="True" />
															<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter TargetName="ArrowBorder" Property="BorderBrush" Value="#203d77" />
													</MultiDataTrigger>
													<Trigger Property="IsChecked" Value="True">
														<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
														<Setter TargetName="Border" Property="Background" Value="#fcfcfc" />
														<Setter TargetName="ArrowBorder" Property="BorderBrush" Value="#203d77" />
													</Trigger>
													<Trigger Property="IsEnabled" Value="False">
														<Setter TargetName="Arrow" Property="Fill" Value="#909090" />
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
							<Grid Margin="{TemplateBinding Padding}">
								<ContentPresenter Name="Content" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding ItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{TemplateBinding Foreground}" RecognizesAccessKey="True" />
								<TextBox Name="PART_EditableTextBox" VerticalContentAlignment="Center" BorderThickness="0" Foreground="{TemplateBinding Foreground}" Background="Transparent" Visibility="Collapsed" IsReadOnly="{TemplateBinding IsReadOnly}" Focusable="True">
									<TextBox.ContextMenu>
										<ContextMenu>
											<MenuItem Command="Undo">
												<MenuItem.Icon>
													<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Undo.svg" Stretch="None" />
												</MenuItem.Icon>
											</MenuItem>
											<MenuItem Command="Redo">
												<MenuItem.Icon>
													<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Redo.svg" Stretch="None" />
												</MenuItem.Icon>
											</MenuItem>
											<Separator />
											<MenuItem Command="Cut">
												<MenuItem.Icon>
													<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Cut.svg" Stretch="None" />
												</MenuItem.Icon>
											</MenuItem>
											<MenuItem Command="Copy">
												<MenuItem.Icon>
													<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Copy.svg" Stretch="None" />
												</MenuItem.Icon>
											</MenuItem>
											<MenuItem Command="Paste">
												<MenuItem.Icon>
													<ctrl:UiSvgImage Source="/BytecodeApi.Wpf.Cui;component/Resources/Icons/Paste.svg" Stretch="None" />
												</MenuItem.Icon>
											</MenuItem>
											<Separator />
											<MenuItem Command="SelectAll" />
										</ContextMenu>
									</TextBox.ContextMenu>
								</TextBox>
							</Grid>
						</ToggleButton>
						<Popup Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" MinWidth="{TemplateBinding ActualWidth, Converter={ui:MathConverter Add}, ConverterParameter={ui:Double 10}}" AllowsTransparency="True" Focusable="False">
							<Border Margin="0,0,10,10" BorderThickness="1" BorderBrush="#203d77" Background="#f2f5fc">
								<Border.Effect>
									<DropShadowEffect BlurRadius="4" ShadowDepth="4" Opacity=".4" />
								</Border.Effect>
								<ScrollViewer CanContentScroll="True">
									<ItemsPresenter />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEditable" Value="True">
							<Setter Property="IsTabStop" Value="False" />
							<Setter TargetName="Content" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Content" Property="TextElement.Foreground" Value="#757575" />
							<Setter TargetName="PART_EditableTextBox" Property="Foreground" Value="#757575" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ComboBoxItem}">
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="Padding" Value="4,0,4,1" />
					<Setter Property="BorderThickness" Value="1" />
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ComboBoxItem}">
								<Border Name="Border" Margin="2,0" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
									<ContentPresenter ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsHighlighted" Value="True">
										<Setter TargetName="Border" Property="BorderBrush" Value="#203d77" />
										<Setter TargetName="Border" Property="Background" Value="#c4d5ff" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static ToolBar.SeparatorStyleKey}">
		<Setter Property="Panel.Margin" Value="3,1" />
		<Setter Property="Panel.Background" Value="#94a6ca" />
	</Style>
</ResourceDictionary>